create database assignment4;
use assignment4;
CREATE TABLE EMP (
  ECODE INT PRIMARY KEY,
  ENAME VARCHAR(50),
  DCODE CHAR(1),
  GRADE CHAR(1),
  BASIC FLOAT,
  JN_DT DATE
);


INSERT INTO EMP (ECODE, ENAME, DCODE, GRADE, BASIC, JN_DT)
VALUES (1, 'John Doe', 'A', 'B', 5000.00, '2023-01-01');

INSERT INTO EMP (ECODE, ENAME, DCODE, GRADE, BASIC, JN_DT)
VALUES (2, 'Jane Smith', 'B', 'C', 7000.00, '2023-02-15');

INSERT INTO EMP (ECODE, ENAME, DCODE, GRADE, BASIC, JN_DT)
VALUES (3, 'Michael Johnson', 'A', 'A', 9000.00, '2023-03-10');
INSERT INTO EMP
VALUES (4, 'Chompers Ike', 'B', 'A', 1900.00, '2022-12-05');

ALTER TABLE EMP   
RENAME COLUMN ECODE TO EMPLOYEE_CODE;
ALTER TABLE EMP   
RENAME COLUMN ENAME TO NAME;

ALTER TABLE EMP   
RENAME COLUMN DCODE TO DEPARTMENT_CODE;
ALTER TABLE EMP   
RENAME COLUMN `JN-DT` TO JOINING_DATE;

SELECT 
  EMPLOYEE_CODE AS 'EMPLOYEE CODE',
  NAME AS 'NAME',
  DEPARTMENT_CODE AS 'DEPT.CODE',
  CONCAT('Grade: ', GRADE) AS 'GRADE',
  FORMAT(BASIC, 0) AS 'BASIC',
  DATE_FORMAT(JOINING_DATE, '%M %d, %Y') AS 'JOINING DATE'
FROM EMP;


SHOW COLUMNS FROM EMP;
SHOW COLUMNS FROM EMP LIKE 'BASIC';
SELECT EMPLOYEE_CODE, NAME, DEPARTMENT_CODE, GRADE, BASIC, JOINING_DATE FROM EMP;
ALTER TABLE EMP MODIFY COLUMN `JOINING_DATE` DATE;
ALTER TABLE EMP MODIFY COLUMN EMPLOYEE_CODE INT;
ALTER TABLE EMP MODIFY COLUMN NAME VARCHAR(50);
ALTER TABLE EMP MODIFY COLUMN DEPARTMENT_CODE CHAR(1);
ALTER TABLE EMP MODIFY COLUMN GRADE CHAR(1);
ALTER TABLE EMP MODIFY COLUMN BASIC FLOAT;
ALTER TABLE EMP MODIFY COLUMN JOINING_DATE DATE;
SHOW COLUMNS FROM EMP;

SELECT 
  IF(@prev_dcode = DEPARTMENT_CODE, '', DEPARTMENT_CODE) AS 'DEPT.CODE',
  EMPLOYEE_CODE AS 'EMPLOYEE CODE',
  NAME AS 'NAME',
  GRADE AS 'GRADE',
  FORMAT(BASIC, 0) AS 'BASIC',
  DATE_FORMAT(JOINING_DATE, '%M %d, %Y') AS 'JOINING DATE',
  @prev_dcode := DEPARTMENT_CODE as DEPARTMENT_CODE
FROM EMP
ORDER BY DEPARTMENT_CODE, EMPLOYEE_CODE;


SELECT 
  CONCAT(GROUP_CONCAT(IF(@prev_dcode = DEPARTMENT_CODE, '', DEPARTMENT_CODE) SEPARATOR '\n'), '\n') AS 'DEPT.CODE',
  EMPLOYEE_CODE AS 'EMPLOYEE CODE',
  NAME AS 'NAME',
  GRADE AS 'GRADE',
  FORMAT(BASIC, 0) AS 'BASIC',
  DATE_FORMAT(JOINING_DATE, '%M %d, %Y') AS 'JOINING DATE',
  @prev_dcode := DEPARTMENT_CODE
FROM (
  SELECT *
  FROM EMP
  ORDER BY DEPARTMENT_CODE, EMPLOYEE_CODE
) AS sorted_emp
GROUP BY DEPARTMENT_CODE, EMPLOYEE_CODE
ORDER BY DEPARTMENT_CODE, EMPLOYEE_CODE;


SELECT 
  CONCAT(GROUP_CONCAT(IF(@prev_dcode = DCODE, '', DCODE) SEPARATOR '\n'), '\n') AS 'DEPT.CODE',
  ECODE AS 'EMPLOYEE CODE',
  ENAME AS 'NAME',
  GRADE AS 'GRADE',
  FORMAT(BASIC, 0) AS 'BASIC',
  DATE_FORMAT(JN_DT, '%M %d, %Y') AS 'JOINING DATE',
  @prev_dcode := DCODE
FROM (
  SELECT *,
    IF(@prev_grade = GRADE, '', GRADE) AS 'IGNORE_GRADE',
    @prev_grade := GRADE
  FROM EMP
  ORDER BY DCODE, GRADE, ECODE
) AS sorted_emp
GROUP BY DCODE, GRADE, ECODE
ORDER BY DCODE, GRADE, ECODE;


SELECT 
  CONCAT(GROUP_CONCAT(IF(@prev_dcode = DCODE, '', DCODE) SEPARATOR '\n'), '\n') AS 'DEPT.CODE',
  ECODE AS 'EMPLOYEE CODE',
  ENAME AS 'NAME',
  GRADE AS 'GRADE',
  FORMAT(BASIC, 0) AS 'BASIC',
  DATE_FORMAT(JN_DT, '%M %d, %Y') AS 'JOINING DATE',
  @prev_dcode := DCODE,
  @sum_basic := IF(@prev_dcode = DCODE, @sum_basic + BASIC, BASIC),
  @count_basic := IF(@prev_dcode = DCODE, @count_basic + 1, 1),
  @avg_basic := IF(@prev_dcode = DCODE, @sum_basic / @count_basic, BASIC),
  @total_basic := IF(@prev_dcode = DCODE, @total_basic + BASIC, BASIC)
FROM (
  SELECT *,
    IF(@prev_grade = GRADE, '', GRADE) AS 'IGNORE_GRADE',
    @prev_grade := GRADE
  FROM EMP
  ORDER BY DCODE, GRADE, ECODE
) AS sorted_emp
GROUP BY DCODE, GRADE, ECODE
WITH ROLLUP
ORDER BY DCODE, GRADE, ECODE;



-- assignemtn 2 19
SELECT e.EMP_NAME
FROM EMPLOYEE e
INNER JOIN (
    SELECT DEPT_CODE, AVG(BASIC) AS avg_basic
    FROM EMPLOYEE
    GROUP BY DEPT_CODE
) dept_avg ON e.DEPT_CODE = dept_avg.DEPT_CODE
WHERE e.SEX = 'F' AND e.BASIC > dept_avg.avg_basic;

